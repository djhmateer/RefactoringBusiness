@{
    ViewBag.Title = "Refactoring C#";
}

@*<div class="jumbotron">
    <h1>Refactoring C#</h1>
    <p class="lead">Making the Enterprise developer happy!</p>
    <p><a href="http://asp.net" class="btn btn-primary btn-lg">Learn more &raquo;</a></p>
</div>*@

<div class="row">
    <div class="col-md-3">
        <h2>Refactoring</h2>

        <p>
            <a href="/" title="In an enterprise documentation is important. https://leanpub.com/techtribesje  is a good example of documentation!  If you don't know the whole system, should you be 'making it better'?  https://www.youtube.com/watch?v=oDpdaXt0HQI&feature=youtu.be  and https://lostechies.com/andrewsiemer/2015/12/09/easy-way-to-gain-high-level-understanding/ ">a - Continual Documentation / Do you understand the system?</a>
        </p>

        <p>
            <a href="/" title="The place to start!  In your day to day work, try applying any of the 0-6 tips below to improve happiness">b - Development by continual refactoring</a>
        </p>

        <p>
            <a href="/" title="Is there a 'feature' that is missing eg  easy to change the codebase - compared to other software eg how quickly can I make a change?  Will explore the common pain points eg:  Features take a long time to dev, The codebase is hard to work with because it is complex, How to quantify what a 'good' codebase looks like eg cyclomatic complexity">c - Does it need refactoring?</a>
        </p>

        <p>
            <a href="/" title="Consistency is the <strike>hobgoblin of the unimaginative</strike>??  Coding 'standards' and why consistency across a project, and a company can be a good thing!">d - Coding style</a>
        </p>

        <p>
            <a href="/" title="0-x will follow a Storyline...I can safely undo any changes I make.  I can see whats changed over time.  http://www.barbarianmeetscoding.com/wiki/git-cheatsheet/">0 - Source Control</a>
        </p>
        <p>
            <a href="/" title="VS or R# makes it safe to rename.  Nouns vs Verbs.. suggestions for fields/properties/methods/classes">1 - Rename mercilessly</a>
        </p>
        <p>
            <a href="/">2 - R# suggestions</a>
        </p>
        <p>
            <a href="/" title="Experience.. when to use /// style comments..  When to not use comments.  When projects documentation is very useful.">3 - Comments / Documentation</a>
        </p>
        <p>
            <a href="/">4 - Dead code (must die)</a>
        </p>
        <p>
            <a href="/">5 - Break up long methods</a>
        </p>
        <p>
            <a href="/">6 - Unit Test</a>
        </p>
    </div>
    <div class="col-md-3">
        <!-- Showing examples of doing it right!-->
        <h2>Bits</h2>
        <p>
            <a href="/">Exception handling</a>
        </p>
        <p>
            <a href="/">Log (mercilessly)</a>
        </p>
        <p>
            <a href="/">Unit / Integration / Site Testing</a>
        </p>
        <p>
            <a href="/">SQL Refactoring</a>
        </p>
        <p>
            <a href="/" title="eg Miniprofiler to give you page load/sql query times as you develop">Performance metrics as you develop</a>
        </p>
        <p>
            <a href="/">Ditch reporting to...</a>
        </p>
        <p>
            <a href="/"></a>
        </p>

    </div>
    <div class="col-md-3">
        <!-- Examples of proper code showing all these concepts -->
        <h2>Arch and Discussions</h2>
        <p>
            <a href="/" title="Roll your own too">ORMS EF Dapper etc vs ADO.NET and SP's</a>
        </p>
        <p>
            <a href="/">Patterns - Repository (DB)</a>
        </p>
        <p>
            <a href="/">Patterns - Decorator (Logging and Caching)</a>
        </p>
        <p>
            <a href="/">Favour composition</a>
        </p>
        <p>
            <a href="/" title="Pure DI/Poor mans..composition root.. vs containers">Dependency Injection (is a good thing!)</a>
        </p>
        <p>
            <a href="/">When to use Ajax / SPA Web UIs</a>
        </p>
        <p>
            <a href="/">DB Source Control</a>
        </p>
        <p>
            <a href="/" title="Managers, managers managers, and users all love to see beauty.  They will unfairly judge your application based on looks.">Aesthetics and usability - important!</a>
        </p>
        <p>
            <a href="/" title="I find people are overjoyed when their expectations are surpassed with application responsiveness.  This includes users, fellow developers and managers.  Even if speed is not in the spec, it is.  People can go irrationally nuts if something takes">Speed - important (but not why you may think)</a>
        </p>

        <p>
            <a href="/">SOLID</a>
        </p>
        <p>
            <a href="/">CQS</a>
        </p>
        <p>
            <a href="/">CQRS</a>
        </p>

        <p>
            <a href="/">Null references - Maybe?</a>
        </p>

        <p>
            <a href="/" title="When do I need to start using this...smells.  Typical use cases eg Email queue.  Probably performance of existing app would be a smell">Queuing - MSMQ, RabbitMQ??</a>
        </p>


        <p>
            <a href="/">1 - Monolith that's unwieldy..to SOA/Microservices?</a>
        </p>
        <p>
            <a href="/" title="Quote from Postman website - getpostman.com.  Do I really need APIs to be building a modern software app.  Am I doing it wrong?  Good guide:  https://github.com/Yelp/service-principles   Favour a monolith for simpler systems http://martinfowler.com/bliki/MonolithFirst.html   build a simplistic version of it and see how well it works out  -> Lean Startup - learn quickly whether something is going to work or not - fail fast if not...    WCF or WebAPI. http://www.codefoster.com/webservicesforward/">All hail the Monolith!</a>
        </p>
        <p>
            <a href="/">2 - Lots of small systems that are unwieldy..bring them together?</a>
        </p>
        <p>
            <a href="/" title="Refactoring Legacy Code - Michael Feathers, Growing Object Oriented Software guided by tests">Inspiring books and videos</a>
        </p>
        <p>
            <a href="/" title="Code Smells - http://blog.codinghorror.com/code-smells/, Joel Test http://www.joelonsoftware.com/articles/fog0000000043.html">Inspiring blog articles</a>
        </p>
        <p>
            <a href="/" title="How much can you leave out of the application?  What is the core?">Less is more...</a>
        </p>
    </div>
    <div class="col-md-3">
        <h2>Deploy / DevOps</h2>
        <p>
            <a href="/" title="Robocopy to Octopus...make rollback easy.  How to deploy in a large enterprise which has a very manual procedure which takes weeks.">Deploy fast and automated</a>
        </p>
        <p>
            <a href="/">Continuous Integration / Deployment</a>
        </p>
        <p>
            <a href="/">Dev/Test/UAT/Prod</a>
        </p>
        <p>
            <a href="/">Monitoring - Stash / Kibana</a>
        </p>
        <p>
            <a href="/" title="eg build number, git id, and build date eg https://techtribes.je/summary ">Useful build information</a>
        </p>
        <p>
            <a href="/" title="from Scheduled Task to backup db and copy to backup location to...">Backups</a>
        </p>

    </div>

    <div class="col-md-3">
        <h2 title="Templates for projects that are considered by others examples of 'doing it right'.  I've found it very hard to find 'good' examples of full blown apps.  Who writes well factored code open source?  http://c2.com/cgi/wiki?PleaseShowMeAlargeWellFactoredProgram">Examples</h2>
        <p>
            <a href="/" title="Sometimes this is the answer in an enterprise which have very junior developers which change often from different cultures.">MVC5 as simple as possible CRUD app</a></p>
            <p><a href="/">Console App CSV data importer nightly</a></p>
            <p><a href="/">MVC5 app using Ajax</a></p>
            <p><a href="/">MVC5 app using SPA</a></p>
            <p><a href="/">Webforms Web Application</a></p>
            <p><a href="/">Webforms Website in VB.NET</a></p>
            <p><a href="/">Open Source project 1</a></p>
        </p>
    </div>
</div>

