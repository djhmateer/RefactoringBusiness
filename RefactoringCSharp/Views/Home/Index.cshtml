@{
    ViewBag.Title = "Refactoring C#";
}

@*<div class="jumbotron">
        <h1>Refactoring C#</h1>
        <p class="lead">Making the Enterprise developer happy!</p>
        <p><a href="http://asp.net" class="btn btn-primary btn-lg">Learn more &raquo;</a></p>
    </div>*@

<div class="row">
   <div class="col-md-3">
        <h2>Refactoring</h2>
        
        <p><a href="/Page/SourceControl" title="In an enterprise documentation is important. https://leanpub.com/techtribesje  is a good example of documentation!  If you don't know the whole system, should you be 'making it better'?  https://www.youtube.com/watch?v=oDpdaXt0HQI&feature=youtu.be  and https://lostechies.com/andrewsiemer/2015/12/09/easy-way-to-gain-high-level-understanding/ ">a - Continual Documentation / Do you understand the system?</a></p>
        
        <p><a href="/Page/SourceControl" title="The place to start!  In your day to day work, try applying any of the 0-6 tips below to improve happiness">b - Development by continual refactoring</a></p>

        <p><a href="/Page/SourceControl" title="Is there a 'feature' that is missing eg  easy to change the codebase - compared to other software eg how quickly can I make a change?  Will explore the common pain points eg:  Features take a long time to dev, The codebase is hard to work with because it is complex, How to quantify what a 'good' codebase looks like eg cyclomatic complexity">c - Does it need refactoring?</a></p>
        
        <p><a href="/Page/SourceControl" title="Consistency is the <strike>hobgoblin of the unimaginative</strike>??  Coding 'standards' and why consistency across a project, and a company can be a good thing!">d - Consistency is good!</a></p>
        
        <p><a href="/Page/SourceControl" title="I can safely undo any changes I make.  I can see whats changed over time.">0 - Source Control</a></p>
        <p><a href="/Page/SourceControl" title="VS or R# makes it safe to rename.  Nouns vs Verbs.. suggestions for fields/properties/methods/classes">1 - Rename mercilessly</a></p>
        <p><a href="/Page/SourceControl">2 - R# suggestions</a></p>
        <p><a href="/Page/SourceControl" title="Experience.. when to use /// style comments..  When to not use comments.  When projects documentation is very useful.">3 - Comments / Documentation</a></p>
        <p><a href="/Page/SourceControl">4 - Dead code (must die)</a></p>
        <p><a href="/Page/SourceControl">5 - Break up long methods</a></p>
        <p><a href="/Page/SourceControl">6 - Unit Test</a></p>
    </div>
    <div class="col-md-3">
        <h2>Bits</h2>
        <p><a href="/Page/SourceControl">Exception handling</a></p>
        <p><a href="/Page/SourceControl">Log (mercilessly)</a></p>
        <p><a href="/Page/SourceControl">Unit / Integration / Site Testing</a></p>
        <p><a href="/Page/SourceControl">SQL Refactoring</a></p>
        <p><a href="/Page/SourceControl">Ditch reporting to...</a></p>
        <p><a href="/Page/SourceControl"></a></p>
        
    </div>
    <div class="col-md-3">
        <h2>Arch and Discussions</h2>
        <p><a href="/Page/SourceControl">ORMS EF Dapper etc vs ADO.NET and SP's</a></p>
        <p><a href="/Page/SourceControl">Patterns - Repository (DB)</a></p>
        <p><a href="/Page/SourceControl">Patterns - Decorator (Logging and Caching)</a></p>
        <p><a href="/Page/SourceControl">Favour composition</a></p>
        <p><a href="/Page/SourceControl">Dependency Injection (is a good thing!)</a></p>
        <p><a href="/Page/SourceControl">When to use Ajax / SPA Web UIs</a></p>
        <p><a href="/Page/SourceControl">DB Source Control</a></p>
        <p><a href="/Page/SourceControl" title="Managers, managers managers, and users all love to see beauty.  They will unfairly judge your application based on looks.">Aesthetics and usability - its important!</a></p>
        <p><a href="/Page/SourceControl" title="I find people are overjoyed when their expectations are surpassed with application responsiveness.  This includes users, fellow developers and managers.  Even if speed is not in the spec, it is.  People can go irrationally nuts if something takes">Speed - its important (but not why you may think)</a></p>
        
        <p><a href="/Page/SourceControl">SOLID</a></p>
        <p><a href="/Page/SourceControl">CQS</a></p>
        
        <p><a href="/Page/SourceControl">Null references - Maybe?</a></p>
        <p><a href="/Page/SourceControl">1 - Monolith thats unwieldy..to SOA/Microservices?</a></p>
        <p><a href="/Page/SourceControl" title="Quote from Postman website - getpostman.com.  Do I really need APIs to be building a modern software app.  Am I doing it wrong?">Modern software is build using APIs..?</a></p>
        <p><a href="/Page/SourceControl">2 - Lots of small systems that are unwieldy..bring them together?</a></p>
        <p><a href="/" title="Refactoring Legacy Code - Michael Feathers, Growing Object Oriented Software guided by tests">Inspiring books and videos</a></p>
        <p><a href="/" title="Code Smells - http://blog.codinghorror.com/code-smells/, Joel Test http://www.joelonsoftware.com/articles/fog0000000043.html">Inspiring blog articles</a></p>
    </div>
    <div class="col-md-3">
        <h2>Deploy / DevOps</h2>
        <p><a href="/Page/SourceControl" title="Robocopy to Octopus...make rollback easy">Deploy fast and automated</a></p>
        <p><a href="/Page/SourceControl">Continuous Integration / Deployment</a></p>
        <p><a href="/Page/SourceControl">Dev/Test/UAT/Prod</a></p>
        <p><a href="/Page/SourceControl">Monitoring - Stash / Kibana</a></p>
        <p><a href="/Page/SourceControl" title="eg build number, git id, and build date eg https://techtribes.je/summary ">Useful build information</a></p>
        <p><a href="/Page/SourceControl" title="from Scheduled Task to backup db and copy to backup location to...">Backups</a></p>
        
    </div>
</div>